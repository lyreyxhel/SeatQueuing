<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="PictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEAYABgAAD/2wBDAAMCAgMCAgMDAwMEAwMEBQgFBQQEBQoHBwYIDAoMDAsKCwsN
        DhIQDQ4RDgsLEBYQERMUFRUVDA8XGBYUGBIUFRT/2wBDAQMEBAUEBQkFBQkUDQsNFBQUFBQUFBQUFBQU
        FBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBT/wAARCADZANkDASIAAhEBAxEB/8QA
        HwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIh
        MUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVW
        V1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXG
        x8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQF
        BgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAV
        YnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOE
        hYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq
        8vP09fb3+Pn6/9oADAMBAAIRAxEAPwD9U6KKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAoooo
        AKKKKACiikLbetAC0UwSA+tOBzQAtFFFABRRRQAUUUUAFFNZtvUH8K+ffjn+3p8F/wBnvUp9J8TeKRde
        IIOJNG0eE3dzGf7r7fkjbkfK7Kec4xQB9CUV8Byf8FpvggjMB4Y8fMASNw0+x59/+PzNdj4Q/wCCtX7P
        PiiWOO91rWfDDPwDq+kyEA+hMHmgfXp70AfZdFcT8PfjZ4B+LFo1z4O8Y6L4kjRPMkXTr6OV4l9XQHcn
        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
        igAooooAKKKKACiiigAooooAKKKKACiiigD/2Q==
</value>
  </data>
</root>